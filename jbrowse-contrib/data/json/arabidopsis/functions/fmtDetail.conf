variantEffect = function(value) {
        newvalue = "";
        if(typeof value != 'undefined' && value instanceof Array) {
            for(var i=0, len=value.length; i<len; i++) {
                var dataSplit  = value[i].split("|");
                newvalue += dataSplit[3]+": "+dataSplit[0]+"<br />";
            }
        }
        return newvalue;
    }

Comment = function(value) {
        newvalue = "";
        if(typeof value != 'undefined' && value instanceof Array) {
	newvalue = value[0];
            for(var i=1, len=value.length; i<len; i++) {
                newvalue += ","+value[i];
            }
        }
        return newvalue;
    }

fmtDetailValue_Genbank_acc = function(fieldvalue) {
	return '<a target=\"_blank\" href=\"http://www.ncbi.nlm.nih.gov/nucgss/'+fieldvalue+'\">'+fieldvalue+'</a>';
	}

fmtDetailValue_Name = function(name) {
	return '<a target=\"_blank\" href=\"https://www.arabidopsis.org/servlets/TairObject?type=polyallele&name='+name+'\">'+name+'</a>';
	}

fmtDetailField_Length = function(fieldname){
	return false
	}

fmtDetailField_Id = function(fieldname){
	return false
	}

vista_color = function (feature) {
    /* set default color scheme that can be overridden by config parameters in the general section */
    var low_color = (this.browser.config.hasOwnProperty('vista_curve_color_low')) ? this.browser.config.vista_curve_color_low : 'gray';
    var high_color = (this.browser.config.hasOwnProperty('vista_curve_color_high')) ? this.browser.config.vista_curve_color_high : 'wheat';
    var color_score = (this.browser.config.hasOwnProperty('vista_curve_high_score')) ? this.browser.config.vista_curve_high_score : 75;
    var cds_color = (this.browser.config.hasOwnProperty('vista_cds_color')) ? this.browser.config.vista_cds_color : 'skyblue';
    var utr_color = (this.browser.config.hasOwnProperty('vista_utr_color')) ? this.browser.config.vista_utr_color : 'lightblue';
    /* always default to low_color if the current zoom level is < 8 (last zoom level with multiple pixels per base pair; each block is a span of 12501 bp or less) */
    var curZoom = this.browser.view.curZoom;
    /* overrride color for CDS/UTR overlaps, if we have that data */
    if (feature.get('overlap') > 0) {
        if (feature.get('overlap') == 1) { return cds_color; }
        if (feature.get('overlap') == 2) { return utr_color; }
	/* unknown overlap value, so go with regular curve colors */
        if (curZoom < 8) {
            return low_color;
        }
        else {
            if (feature.get('score') >= color_score) {
                return high_color;
            }
            else {
                return low_color; /* also the default if no score is found */
            }
        }
    }
    else {
        if (curZoom < 8) {
            return low_color;
        }
        else {
            if (feature.get('score') >= color_score) {
                return high_color;
            }
            else {
                return low_color; /* also the default if no score is found */
            }
        }
    }
  }

vista_browserLink = function (track,feature,div) {
    var run = this.track.config.query.target_run;
    var base = this.track.config.query.vista_base_id;
    var region = this.track.browser.view.visibleRegion();
    /* visibleRegion() seems to routinely deliver start as interbase coordinates, not matching the location box! */
    var start = region.start + 1;
    /* sometimes end is returned by visibleRegion() as a float */
    var end = Math.round(region.end);
    return 'http://pipeline.lbl.gov/cgi-bin/textBrowser2?act=hits&run='+run+'&base='+base+'&pos='+region.ref+':'+start+'-'+end;
  }